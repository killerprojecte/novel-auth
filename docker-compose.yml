services:
  web:
    image: ghcr.io/killerprojecte/novel-auth-web:latest
    ports:
      - 4000:80
    healthcheck:
      test: ["CMD-SHELL", "wget --spider --tries=1 --no-verbose http://localhost || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 20s

  api:
    image: ghcr.io/killerprojecte/novel-auth-api:latest
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    environment:
      - REFRESH_TOKEN_SECRET
      - ACCESS_TOKEN_SECRET
      - DB_HOST=postgresql
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - RDB_HOST=redis
      - SMTP_MAIL
      - SMTP_SERVER
      - SMTP_PASSWORD
    healthcheck:
      test: ["CMD-SHELL", "wget --spider --tries=1 --no-verbose http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 20s

  postgresql:
    image: postgres:17-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD
      - POSTGRES_USER=auth
      - POSTGRES_DB=auth
    volumes:
      - ./data/postgresql:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 20s

  redis:
    image: redis:7.4.5
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli", "--raw", "incr", "ping" ]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 20s

networks:
  default:
    name: auth
    driver: bridge
